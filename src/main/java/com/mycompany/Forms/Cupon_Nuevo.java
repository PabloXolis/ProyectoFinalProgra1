package com.mycompany.Forms;

import com.mycompany.Clases.Cupon;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Cupon_Nuevo extends javax.swing.JFrame {

    public Cupon_Nuevo() {
        initComponents();
        this.setDefaultCloseOperation(Login.DISPOSE_ON_CLOSE); // Para evitar que al dar en la equis, se cierre el form principal.
        setLocationRelativeTo(null);
        
        jComboBox1.removeAllItems(); // Inicializando el JcomboBox
        jComboBox1.addItem("Porcentaje");
        jComboBox1.addItem("Monto Fijo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CargaMasiva = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Creación de Cupones");

        jLabel1.setText("Código:");

        jLabel2.setText("Tipo de Descuento:");

        jLabel3.setText("Valor de Descuento");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Crear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setToolTipText("");

        jLabel4.setText("Fecha de expiración:");

        CargaMasiva.setText("Carga Masiva");
        CargaMasiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargaMasivaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(54, 54, 54))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton2)
                        .addGap(55, 55, 55)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jTextField3))
                        .addGap(160, 160, 160)
                        .addComponent(CargaMasiva)))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CargaMasiva)
                        .addGap(5, 5, 5)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private Date pasarAF5echa(String fechaStr){
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        try{
            return sdf.parse(fechaStr);
        } catch (ParseException e){
            return null;
        }
    }
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            // Comprobando que los campos no esten vacíos.
            if (jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jTextField3.getText().isEmpty()) {
                throw new IllegalArgumentException("Los campos no pueden estar vacíos.");
            }else{
                try{
                    String code = jTextField1.getText();
                    boolean validExistente = false;
                    boolean validLength = true;
                    boolean validNumber = false;
                    boolean minuscula = false;
                    
                    for(Cupon c : Proyecto_Final_Log_In.cupones){
                        if(code.equals(c.codigo)){
                            validExistente = true;
                            JOptionPane.showMessageDialog(this, "Error: Ingresaste un código ya existente.");
                        }
                    }
                    
                    if(code.length() < 5){
                        validLength = false;
                        JOptionPane.showMessageDialog(this, "Error: El código ingresado tiene que ser mayor a 5 caracteres.");
                    }

                    for(int i = 0; i < code.length(); i++){
                        int ascii = (int) code.charAt(i);

                        if(ascii >= 48 && ascii <= 57){ // Rango ASCII de los dígitos.
                            validNumber = true;
                        }
                    }
                    if(!validNumber){
                        JOptionPane.showMessageDialog(this, "Error: El código ingresado debe poser al menos un número.");
                    }

                    for(int i = 0; i < code.length(); i++){
                        int ascii = (int) code.charAt(i);

                        if(ascii >= 97 && ascii <= 122){ // Rango ASCII de las minusculas.
                            minuscula = true;
                        }
                    }
                    if(minuscula){
                        JOptionPane.showMessageDialog(this, "El código ingresado no debe poseer minúsculas.");
                    }

                    if((validExistente == false)&&(validLength == true)&&(validNumber == true)&&(minuscula == false)){
                        Cupon c = new Cupon();
                        
                        String Tipo = jComboBox1.getSelectedItem().toString();
                        double descuento = Double.parseDouble(jTextField2.getText());
                        String fecha = jTextField3.getText();
                        Date fechaParseada = null;
                        
                        // Definiendo los formatos aceptados
                        SimpleDateFormat[] formatos = {
                            new SimpleDateFormat("dd/MM/yyyy"), new SimpleDateFormat("dd-MM-yyyy"), 
                            new SimpleDateFormat("yyyy/MM/dd"), new SimpleDateFormat("yyyy-MM-dd")
                        };
                        
                        SimpleDateFormat formatoVisible = new SimpleDateFormat("dd/MM/yyyy");

                        for(SimpleDateFormat formato : formatos) {
                            formato.setLenient(false);
                        }

                        // Prueba cada formato hasta encontrar uno válido
                        for(SimpleDateFormat formato : formatos) {
                            try {
                                fechaParseada = formato.parse(fecha);
                                break; // Si llega aquí, el formato es correcto
                            } catch (ParseException e) {
                                // Continua con el siguiente formato
                            }
                        }
                            
                        if (fechaParseada == null) {
                            JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Usa dd/MM/yyyy o dd-MM-yyyy");
                            return;
                        }
                        
                        String fechaFormateada = formatoVisible.format(fechaParseada);
                        
                        if(Tipo.equals("Porcentaje")){
                            if (descuento > 0) {
                                c.codigo = code;
                                c.tipo = Tipo;
                                c.valor_descuento = descuento;
                                c.activo = true;
                                c.expira = fechaFormateada;

                                Proyecto_Final_Log_In.cupones.add(c);
                                JOptionPane.showMessageDialog(this, "Nuevo cupón creado con éxito.");
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "El descuento debe ser mayor a 0.");
                            }
                        }
                        else{ // Monto
                            if (descuento > 0) {
                                c.codigo = code;
                                c.tipo = Tipo;
                                c.valor_descuento = descuento;
                                c.activo = true;
                                c.expira = fechaFormateada;

                                Proyecto_Final_Log_In.cupones.add(c);
                                JOptionPane.showMessageDialog(this, "Nuevo cupón creado con éxito.");
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "El descuento debe ser mayor a 0 quetzales");
                            }
                        }
                    }
                }
                catch(HeadlessException e){
                    JOptionPane.showMessageDialog(this, "Error: " + e);
                }
            }
        }catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
                               
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private String obtenerRuta(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File archivo = fileChooser.getSelectedFile();
        return archivo.getAbsolutePath();
    }
    
    private ArrayList<Cupon> leer(String ruta){
        
        ArrayList<Cupon> Cupones = new ArrayList<>();
        
        try {
            File archivo = new File(ruta);
            FileReader leer;
            leer = new FileReader(archivo);
            BufferedReader bloque = new BufferedReader(leer);
            String linea = bloque.readLine();
            linea = bloque.readLine(); // Se salta el encabezado y comienza a leer desde la segunda líneí
            
            while (linea != null) {
                String[] datosSeparadosCupon = linea.split("\\|");
                
                if (datosSeparadosCupon.length < 4) {
                    linea = bloque.readLine(); // Saltar línea malformada
                    continue;
                }
                
                Cupon c = new Cupon();
                
                c.codigo = datosSeparadosCupon[0];
                c.valor_descuento = Double.parseDouble(datosSeparadosCupon[1]);
                
                if (datosSeparadosCupon[2].equalsIgnoreCase("Porcentaje")){
                    c.tipo = "Porcentaje";
                }
                else{
                    c.tipo = "Monto";
                }
                
                
                String fecha = datosSeparadosCupon[3];
                Date fechaParseada = null;

                // Definiendo los formatos aceptados
                SimpleDateFormat[] formatos = {
                    new SimpleDateFormat("dd/MM/yyyy"), new SimpleDateFormat("dd-MM-yyyy"), 
                    new SimpleDateFormat("yyyy/MM/dd"), new SimpleDateFormat("yyyy-MM-dd")
                };

                SimpleDateFormat formatoVisible = new SimpleDateFormat("dd/MM/yyyy");

                for(SimpleDateFormat formato : formatos) {
                    formato.setLenient(false);
                }

                // Prueba cada formato hasta encontrar uno válido
                for(SimpleDateFormat formato : formatos) {
                    try {
                        fechaParseada = formato.parse(fecha);
                        break; // Si llega aquí, el formato es correcto
                    } catch (ParseException e) {
                        // Continua con el siguiente formato
                    }
                }

                if (fechaParseada == null) {
                    linea = bloque.readLine(); // Preparando la próxima línea.
                    continue;
                }

                String fechaFormateada = formatoVisible.format(fechaParseada);
                
                c.expira = fechaFormateada;
                c.activo = true;
                
                Proyecto_Final_Log_In.cupones.add(c);
                
                linea = bloque.readLine(); // Preparando la próxima línea.
            }
            
            leer.close();
            JOptionPane.showMessageDialog(this, "Carga Masiva de Cupones exitosa.");
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Cupon_Nuevo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Cupon_Nuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return Cupones;
    }
    
    private void CargaMasivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargaMasivaActionPerformed
        
        String ruta = obtenerRuta();
        leer(ruta);
        
    }//GEN-LAST:event_CargaMasivaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CargaMasiva;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
