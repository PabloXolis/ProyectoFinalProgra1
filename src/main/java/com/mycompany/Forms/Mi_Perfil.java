package com.mycompany.Forms;

import java.awt.HeadlessException;
import javax.swing.JOptionPane;

public class Mi_Perfil extends javax.swing.JFrame {

    public Mi_Perfil() {
        initComponents();
        
        this.setDefaultCloseOperation(Login.DISPOSE_ON_CLOSE); // Para evitar que al dar en la equis, se cierre el form principal.
        setLocationRelativeTo(null);
        
        jLabel5.setText(VentanaAdministrador.usuarioActual.getNombre());
        jLabel6.setText(VentanaAdministrador.usuarioActual.getUsuario());
        jLabel7.setText(VentanaAdministrador.usuarioActual.getRol());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mi Perfil");

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 32)); // NOI18N
        jLabel1.setText("Mi Perfil");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel3.setText("Usuario:");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel4.setText("Rol:");

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jButton1.setText("<html><div style='text-align: center;'>Cambiar<br>Contraseña</div></html>");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(jButton2))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean wrongOld = true;
        boolean wrongNew = false;
        String oldPass = "";
        String newPass;
        
        do{
            try {
                oldPass = JOptionPane.showInputDialog(null, "Ingresa tu contraseña antigua:");

                // Verifica si se canceló la entrada.
                if (oldPass == null) {
                    JOptionPane.showMessageDialog(this, "Operación cancelada.");
                    wrongOld = false;
                }
                else if (oldPass.trim().isEmpty()) {
                    // Usuario no escribió nada
                    JOptionPane.showMessageDialog(this, "Por favor, ingresa tu contraseña.");
                }
                else if (VentanaAdministrador.usuarioActual != null &&
                    oldPass.equals(VentanaAdministrador.usuarioActual.getPassword())) {
                    wrongOld = false;
                    wrongNew = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Contraseña incorrecta.");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Ocurrió un error: " + e.getMessage());
            }

        }while(wrongOld);
        
        
        
         while(wrongNew){    
            try{
                newPass = JOptionPane.showInputDialog(null, "Ingresa tu nueva contraseña:");
                
                boolean validLength = true;
                boolean validNumber = false;
                boolean validLower = false;
                boolean validCapital = false;
                
                if (newPass == null) {
                    JOptionPane.showMessageDialog(this, "Operación cancelada.");
                    wrongNew = false;
                }
                else if (newPass.equals(oldPass)) {
                    
                    JOptionPane.showMessageDialog(this, "Ingresaste tu contraseña antigua. Ingresa una nueva.");
                    
                }else{
                    
                    if(newPass.length() < 6){
                        validLength = false;
                        JOptionPane.showMessageDialog(this, "Error: La contraseña ingresada tiene que ser mayor a 6 caracteres.");
                    }

                    for(int i = 0; i < newPass.length(); i++){
                        int ascii = (int) newPass.charAt(i);

                        if(ascii >= 48 && ascii <= 57){ // Rango ASCII de los dígitos.
                            validNumber = true;
                        }
                    }
                    if(!validNumber){
                        JOptionPane.showMessageDialog(this, "Error: La contraseña ingresada debe poser al menos un número.");
                    }

                    for(int i = 0; i < newPass.length(); i++){ // Rango ASCII de las mayusculas.
                        int ascii = (int) newPass.charAt(i);

                        if(ascii >= 65 && ascii <= 90){
                            validCapital = true;
                        }
                    }
                    if(!validCapital){
                        JOptionPane.showMessageDialog(this, "Error: La contraseña ingresada debe poser al menos una mayúscula.");
                    }

                    for(int i = 0; i < newPass.length(); i++){
                        int ascii = (int) newPass.charAt(i);

                        if(ascii >= 97 && ascii <= 122){ // Rango ASCII de las minusculas.
                            validLower = true;
                        }
                    }
                    if(!validLower){
                        JOptionPane.showMessageDialog(this, "La contraseña ingresada debe poser al menos una minúscula.");
                    }

                    if((validLength == true)&&(validNumber == true)&&(validCapital == true)&&(validLower == true)){
                        VentanaAdministrador.usuarioActual.setPassword(newPass);
                        
                        wrongNew = false;
                        
                        JOptionPane.showMessageDialog(this, "Se ha modificado tu contraseña con éxito.");
                    }
                }
            }
            catch(HeadlessException e){
                JOptionPane.showMessageDialog(this, "Error: " + e);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
